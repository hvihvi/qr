{"version":3,"sources":["pages/home/qr-code.svg","pages/home/list.svg","pages/home/create.svg","components/FatCircleCta.js","pages/home/Home.js","pages/qr/read/QrRead.js","components/Wrapper.js","store/store.js","components/form/FormButton.js","components/form/FormTextInput.js","components/form/FormContainer.js","components/form/FormTextAreaInput.js","libs/crypto.js","pages/tasks/create/CreateTask.js","components/Card.js","pages/qr/display/QrFromId.js","App.js","pages/tasks/list/TaskList.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Img","styled","img","_templateObject","Button","button","_templateObject2","FatCircleCta","_ref","props","Object","esm_extends","react_default","a","createElement","Home","Fragment","react_router_dom","to","components_FatCircleCta","src","create","alt","list","qrLogo","Wrapper","div","QrRead_templateObject","Element","QrRead_templateObject2","_templateObject3","QrRead","_useState","useState","_useState2","slicedToArray","setQrValue","type","accept","capture","lib_default","delay","facingMode","resolution","onError","error","console","onScan","value","QrRead_Img","logo","section","Wrapper_templateObject","initialState","tasks","id","title","description","CREATE_TASK","EDIT_TASK","store","createStore","state","arguments","length","undefined","action","objectSpread","concat","toConsumableArray","task","window","__REDUX_DEVTOOLS_EXTENSION__","Container","FormButton_templateObject","FormButton_templateObject2","FormButton","children","rest","objectWithoutProperties","FormButton_Button","FormTextInput_templateObject","Label","label","FormTextInput_templateObject2","Input","input","FormTextInput_templateObject3","FormTextInput","FormTextInput_Container","assign","FormContainer_templateObject","Item","FormContainer_templateObject2","FormWrapper","FormContainer_Wrapper","React","Children","map","child","FormTextAreaInput_templateObject","FormTextAreaInput_templateObject2","FormTextAreaInput_templateObject3","FormTextAreaInput","FormTextAreaInput_Container","FormTextAreaInput_Label","FormTextAreaInput_Input","rows","cols","hash","i","charCodeAt","withRouter","connect","dispatch","createTask","createTaskAction","history","setTitle","_useState3","_useState4","setDescription","onSubmit","e","preventDefault","crypto","push","FormContainer","form_FormTextInput","onChange","target","form_FormTextAreaInput","form_FormButton","Card_templateObject","QrFromId","qrcode_react_lib_default","size","renderAs","routes","path","component","CreateTask","search","setSearch","filter","includes","Card","display_QrFromId","App","es","components_Wrapper","react_router","route","key","exact","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98004851.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/qr-code.bc973f1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.210fc0cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/create.532367b0.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Img = styled.img`\n  width: 12vh;\n`;\n\nconst Button = styled.button`\n  border-radius: 50%;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  margin: 5vh;\n  height: 20vh;\n  width: 20vh;\n  border: 0px;\n  &:hover {\n    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  }\n`;\n\nconst FatCircleCta = ({ ...props }) => (\n  <Button>\n    <Img {...props} />\n  </Button>\n);\n\nexport default FatCircleCta;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport qrLogo from \"./qr-code.svg\";\nimport list from \"./list.svg\";\nimport create from \"./create.svg\";\nimport FatCircleCta from \"../../components/FatCircleCta\";\n\nconst Home = () => (\n  <>\n    <Link to=\"/createtask/\">\n      <FatCircleCta src={create} alt=\"logo\" />\n    </Link>\n    <Link to=\"/tasklist/\">\n      <FatCircleCta src={list} alt=\"logo\" />\n    </Link>\n    <Link to=\"/qrread/\">\n      <FatCircleCta src={qrLogo} alt=\"logo\" />\n    </Link>\n  </>\n);\n\nexport default Home;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport styled from \"styled-components\";\nimport logo from \"../../home/qr-code.svg\";\n\nconst Wrapper = styled.div`\n  flex: 1;\n  width: 90%;\n  max-width: 100%;\n`;\n\nconst Element = styled.div`\n  padding: 10px;\n`;\n\nconst Img = styled.img`\n  align-self: center;\n  width: 20vh;\n`;\n\nconst QrRead = () => {\n  const [qrValue, setQrValue] = useState(0);\n  return (\n    <Wrapper>\n      <Element>\n        <input type=\"file\" accept=\"image/*\" capture=\"camera\" />\n        <QrReader\n          delay={300}\n          facingMode=\"environment\"\n          resolution={600}\n          onError={error => console.error(error)}\n          onScan={value => setQrValue(value)}\n        />\n      </Element>\n      <Element>\n        <Img src={logo} />\n      </Element>\n    </Wrapper>\n  );\n};\n\nexport default QrRead;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.section`\n  display: flex;\n  height: 100vh; //100% view height\n  max-height: 100vh; //100% view height\n  width: 100vw; // 100% view width\n  max-width: 100vw; // 100% view width\n  background-color: #282c34;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nexport default Wrapper;\n","import { createStore } from \"redux\";\n\nconst initialState = {\n  tasks: [\n    {\n      id: 123,\n      title: \"My first task\",\n      description: \"Something to do\"\n    },\n    {\n      id: 234,\n      title: \"My second task\",\n      description: \"Something to do\"\n    },\n    {\n      id: 345,\n      title: \"My third task\",\n      description: \"Something to do\"\n    }\n  ]\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_TASK:\n      return { ...state, tasks: [...state.tasks, action.task] };\n    case EDIT_TASK:\n      return { ...state, tasks: [...state.tasks, action.task] };\n    default:\n      return { ...state };\n  }\n};\n\nconst CREATE_TASK = \"CREATE_TASK\";\nexport const createTaskAction = task => ({\n  type: CREATE_TASK,\n  task\n});\n\nconst EDIT_TASK = \"EDIT_TASK\";\nexport const editTaskAction = task => ({\n  type: EDIT_TASK,\n  task\n});\n\nexport const store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  padding: 10px;\n`;\n\nconst Button = styled.button`\n  text-align: center;\n  background-color: cyan;\n  font-weight: bold;\n  height: 30px;\n  width: 100%;\n  border: 0px;\n`;\n\nconst FormButton = ({ children, ...rest }) => (\n  <Container>\n    <Button {...rest}>{children}</Button>\n  </Container>\n);\n\nexport default FormButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Label = styled.label`\n  width: 20%;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nconst Input = styled.input`\n  width: 50%;\n`;\n\nconst FormTextInput = ({ label, ...rest }) => (\n  <Container>\n    <Label>{label}</Label>\n    <Input type=\"text\" {...rest} />\n  </Container>\n);\n\nexport default FormTextInput;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  height: 100vh; //100% view height\n  max-height: 100vh; //100% view height\n  width: 100vw; // 100% view width\n  max-width: 100vw; // 100% view width\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Item = styled.div`\n  flex: 1;\n  justify-content: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\nconst FormWrapper = ({ children }) => (\n  <Wrapper>\n    {React.Children.map(children, child => (\n      <Item>{child}</Item>\n    ))}\n  </Wrapper>\n);\n\nexport default FormWrapper;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Label = styled.label`\n  width: 20%;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nconst Input = styled.input`\n  width: 50%;\n`;\n\nconst FormTextAreaInput = ({ label, ...rest }) => (\n  <Container>\n    <Label>{label}</Label>\n    <Input type=\"textarea\" rows={20} cols={30} {...rest} />\n  </Container>\n);\n\nexport default FormTextAreaInput;\n","export const hash = value => {\n  var hash = 0,\n    i,\n    chr;\n  if (value.length === 0) return hash;\n  for (i = 0; i < value.length; i++) {\n    chr = value.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createTaskAction } from \"../../../store/store\";\nimport FormButton from \"../../../components/form/FormButton\";\nimport FormTextInput from \"../../../components/form/FormTextInput\";\nimport FormWrapper from \"../../../components/form/FormContainer\";\nimport FormTextAreaInput from \"../../../components/form/FormTextAreaInput\";\nimport * as crypto from \"../../../libs/crypto\";\n\nconst CreateTask = ({ history, createTask }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  return (\n    <form\n      onSubmit={e => {\n        // prevents page refresh on submit\n        e.preventDefault();\n        createTask({\n          id: crypto.hash(title + description),\n          title,\n          description\n        });\n        history.push(\"/\");\n      }}\n    >\n      <FormWrapper>\n        <FormTextInput\n          label=\"Title:\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n        <FormTextAreaInput\n          label=\"Description:\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        />\n        <FormButton>Create Task</FormButton>\n      </FormWrapper>\n    </form>\n  );\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  createTask: task => dispatch(createTaskAction(task))\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CreateTask)\n);\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  transition: box-shadow 0.2s ease-in-out;\n  background-color: white;\n  color: black;\n  text-align: center;\n  border-radius: 2px;\n  margin: 1rem;\n  padding: 1rem;\n  position: relative;\n  &:hover {\n    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  }\n`;\n","import React from \"react\";\nimport QRCode from \"qrcode.react\";\n\nconst QrFromId = ({ id, ...rest }) => {\n  return (\n    <div>\n      <QRCode value={id} {...rest} size={50} renderAs=\"svg\" />\n    </div>\n  );\n};\n\nexport default QrFromId;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/home/Home\";\nimport QrRead from \"./pages/qr/read/QrRead\";\nimport { Provider } from \"react-redux\";\nimport Wrapper from \"./components/Wrapper\";\nimport { store } from \"./store/store\";\nimport CreateTask from \"./pages/tasks/create/CreateTask\";\nimport TaskList from \"./pages/tasks/list/TaskList\";\n\nconst routes = [\n  {\n    path: \"/\",\n    component: Home\n  },\n  {\n    path: \"/qrread\",\n    component: QrRead\n  },\n  {\n    path: \"/createtask\",\n    component: CreateTask\n  },\n  {\n    path: \"/tasklist\",\n    component: TaskList\n  }\n];\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Wrapper>\n          <Switch>\n            {routes.map((route, key) => (\n              <Route key={key} exact {...route} />\n            ))}\n          </Switch>\n        </Wrapper>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormTextInput from \"../../../components/form/FormTextInput\";\nimport Card from \"../../../components/Card\";\nimport QrFromId from \"../../qr/display/QrFromId\";\n\nconst TaskList = ({ tasks }) => {\n  const [search, setSearch] = useState(\"\");\n  return (\n    <div>\n      <FormTextInput\n        label=\"Filter tasks:\"\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n      />\n      {tasks\n        .filter(\n          task => (\"\" + task.id).includes(search) || task.title.includes(search)\n        )\n        .map(task => (\n          <Card>\n            <div>{task.id}</div>\n            <QrFromId id={task.id} />\n            <div>{task.title}</div>\n            <div>{task.description}</div>\n          </Card>\n        ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n});\n\nexport default connect(mapStateToProps)(TaskList);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}